[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "langsmith_evaluation_helper"
description = "Helper library for langsmith evalution"
version = "0.1.5"
readme = "README.md"
license = { file = "LICENSE" }

requires-python = ">= 3.11"
dependencies = [
  "langchain",
  "langchain-anthropic",
  "langchain-openai",
  "langchain-google-genai",
  "langchain_google_vertexai",
  "langgraph",
  "python-dotenv",
  "openai",
  "pandas",
  "uvloop",
  "langsmith",
  "langchain-community"
]

[project.optional-dependencies]
dev = [
  "pytest",
  "pytest-mock",
  "pytest-env",
  "pytest-dotenv",
  "pytest-asyncio",
  "ruff",
  "mypy",
  "Faker",
  "pyright",
  "types-requests",
  "pytest-cov",
  "types-pyyaml",
  "direnv", 
  "build",
  "setuptools",
  "wheel",
  "twine",
  "pip-licenses",
  "reuse"
]

[tool.setuptools]
package-dir = { "" = "src" }
include-package-data = true

[project.scripts]
langsmith-evaluation-helper = "langsmith_evaluation_helper.cli:main"

[tool.pytest.ini_options]
markers = [
    "integration_test: These tests are specifically for integrations and should be used judiciously."
]

env_files = ".env"


[tool.ruff]
line-length = 120

[tool.ruff.lint]
preview = true
select = [
  "F",   # Pyflakes
  "E",   # pycodestyle
  "W",   # pycodestyle
  "I",   # isort
  "N",   # pep8-naming
  "UP",  # pyupgrade
  "B",   # flake8-bugbear
  "TID", # flake8-tidy-imports
  "SIM", # flake8-simplify
  "C4",  # flake8-comprehensions
]

ignore = [
  "N802", # Function name {name} should be lowercase
  "N805", # First argument of a method should be named self
  # ruff formatter recommends to disable those. see https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
  "COM812", # Trailing comma missing
  "COM819", # Trailing comma prohibited
  "D206",   # Docstring should be indented with spaces, not tabs
  "D300",   # Use triple double quotes """
  "E111",   # Indentation is not a multiple of
  "E114",   # Indentation is not a multiple of {indent_size} (comment)
  "E117",   # Over-indented (comment)
  "E203",   # Whitespace before '{symbol}'
  "E501",   # Line too long ({width} > {limit})
  "ISC001", # Implicitly concatenated string literals on one line
  "ISC002", # Implicitly concatenated string literals over multiple lines
  "Q000",   # Single quotes found but double quotes preferred
  "Q001",   # Single quote multiline found but double quotes preferred
  "Q002",   # Single quote docstring found but double quotes preferred
  "Q003",   # Change outer quotes to avoid escaping inner quotes
  "W191",   #ã€€Indentation contains tabs
]

[tool.ruff.format]
preview = true

[tool.ruff.lint.isort]
known-local-folder = ["langsmith_evaluation_helper"]

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true
check_untyped_defs = true
strict = true
disable_error_code = [
  "no-untyped-call", # Call to untyped function "xxx" in typed context
  "no-any-return",   # Returning Any from function declared to return "xxx"
  "misc",            # Class cannot subclass "xxx" (has type "Any")
  "unused-ignore",   # Unused "type: ignore" comment
]
explicit_package_bases = true
