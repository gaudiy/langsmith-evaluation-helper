name: Publish Python Package

on:
  push:
    branches: main
    tags:
      - 'v*' 

jobs:
  build-and-publish:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"


      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ hashFiles('requirements.txt') }}

      - name: Cache mypy
        uses: actions/cache@v4
        with:
          path: ./.mypy_cache
          key: ${{ hashFiles('pyproject.toml', 'requirements.txt') }}

      - name: Install uv
        run: python -m pip install uv

      - name: Install Dependencies
        run: |
          uv pip sync --system requirements.txt
          uv pip install --system -e .

      - name: Run Integration
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          AZURE_OPENAI_API_BASE: ${{ secrets.AZURE_OPENAI_API_BASE }}
          AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          LANGCHAIN_API_KEY: ${{ secrets.LANGCHAIN_API_KEY }}
          LANGCHAIN_TENANT_ID: ${{ secrets.LANGCHAIN_TENANT_ID }}
          LANGCHAIN_TRACING: ${{ secrets.LANGCHAIN_TRACING }}

          
        run: | 
          make integration_test

      - name: Build package
        run: |
          python -m build

      - name: Publish package to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload dist/*
